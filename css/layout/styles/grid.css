/* 
CSS Grids
Source: https://css-tricks.com/snippets/css/complete-guide-grid/
*/

/* Properties for the Parent (Grid Container) */

/* 

display: grid | inline-grid;

Defines the element as a grid container and establishes 
a new grid formatting context for its contents.

grid – generates a block-level grid
inline-grid – generates an inline-level grid

*/

/*

grid-template-columns: 1fr 1fr 1fr;
e.g. 
    1fr 1fr
    minmax(10px, 1fr) 3fr
    repeat(5, 1fr)
    50px auto 100px 1fr

grid-template-rows: 1fr 50px 1fr 1fr;
e.g. 
    min-content 1fr min-content
    100px 1fr max-content


Defines the columns and rows of the grid with a space-separated 
list of values. The values represent the track size, and the 
space between them represents the grid line.

*/

/* 

grid-template-areas: 
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";

Defines a grid template by referencing the names of the grid areas 
which are specified with the grid-area property.

Repeating the name of a grid area causes the content to span those cells. 
A period signifies an empty cell. 
The syntax itself provides a visualization of the structure of the grid.

.item-a {
  grid-area: header;
}
.item-b {
  grid-area: main;
}
.item-c {
  grid-area: sidebar;
}
.item-d {
  grid-area: footer;
}

.container {
  display: grid;
  grid-template-columns: 50px 50px 50px 50px;
  grid-template-rows: auto;
  grid-template-areas: 
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";
}

*/

/* 

grid-template: <grid-template-rows> / <grid-template-columns>;

A shorthand for setting grid-template-rows, grid-template-columns, 
and grid-template-areas in a single declaration.

*/

/* 

column-gap: <line-size>;
row-gap: <line-size>;

<line-size> – a length value

Specifies the size of the grid lines. 
You can think of it like setting the width of the 
gutters between the columns/rows.

*/

/* 

gap: <grid-row-gap> <grid-column-gap>;

A shorthand for row-gap and column-gap

*/
